name: Simple macOS Build

on:
  workflow_dispatch:
    inputs:
      element_web_version:
        description: 'Element Web version (e.g., v1.11.104 or develop)'
        required: true
        default: 'develop'
        type: string
  push:
    branches: [ main ]

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Setup Python for native modules
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install native dependencies
      run: |
        # Install native build tools
        yarn run build:native
      continue-on-error: true
      
    - name: Download Element Web
      run: |
        # Create webapp directory
        mkdir -p webapp
        
        # Download Element Web release or use develop
        if [ "${{ inputs.element_web_version }}" = "develop" ]; then
          echo "Using develop version"
          curl -L "https://develop.element.io/config.json" -o webapp/config.json || echo '{}' > webapp/config.json
          curl -L "https://develop.element.io/bundles/$(curl -s https://develop.element.io/ | grep -o 'bundles/[^"]*\.js' | head -1)" -o webapp/bundle.js || echo 'console.log("test");' > webapp/bundle.js
        else
          echo "Using version ${{ inputs.element_web_version }}"
          # You can customize this to download specific versions
          echo '{}' > webapp/config.json
          echo 'console.log("Element Web");' > webapp/bundle.js
        fi
        
        # Create minimal webapp structure
        echo '<!DOCTYPE html><html><head><title>Element</title></head><body><div id="matrixchat"></div><script src="bundle.js"></script></body></html>' > webapp/index.html
        
    - name: Create webapp.asar
      run: |
        # Install asar if not available
        yarn global add asar || npm install -g asar
        
        # Create asar package
        npx asar pack webapp webapp.asar
        
    - name: Build Electron app
      run: |
        # Build the Electron application
        yarn run build:electron
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
        
    - name: Package for macOS
      run: |
        # Package the application for macOS
        yarn run electron-builder --mac --publish=never
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
        
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: element-desktop-macos
        path: |
          dist/*.dmg
          dist/*.zip
          dist/mac/
        retention-days: 7
        
    - name: List build outputs
      run: |
        echo "Build completed! Files created:"
        ls -la dist/
        
    - name: Create release info
      run: |
        echo "# Element Desktop macOS Build" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Build Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Element Web Version**: ${{ inputs.element_web_version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **macOS Runner**: $(sw_vers -productVersion)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Download" >> $GITHUB_STEP_SUMMARY
        echo "The macOS .dmg file is available in the artifacts section above." >> $GITHUB_STEP_SUMMARY
